// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.238.1/containers/javascript-node-postgres
// Update the VARIANT arg in docker-compose.yml to pick a Node.js version
{
	"name": "Node.js & PostgreSQL",
	"dockerComposeFile": "docker-compose.yml",
	"service": "app",
	"workspaceFolder": "/workspace",
	"postCreateCommand": ["npm install", "npm run db:create"],
	"forwardPorts": [3000, 5432],

	// Configure tool-specific properties.
	"customizations": {
		// Configure properties specific to VS Code.
		"vscode": {
			// Add the IDs of extensions you want installed when the container is created.
			"settings": {
				"terminal.integrated.shell.linux#": "/bin/zsh",
				"sqltools.connections": [
				{
					"name": "Container database",
					"driver": "PostgreSQL",
					"previewLimit": 50,
					"server": "localhost",
					"port": 5432,
					"database": "postgres",
					"username": "postgres",
					"password": "postgres"
				}
				],
				"files.eol": "\n",
				"files.insertFinalNewline": true,
				"files.trimFinalNewlines": true,
				"files.trimTrailingWhitespace": true,
				"editor.formatOnSave": true,
				"editor.codeActionsOnSave": {
				"source.organizeImports": true
				}
 			 },
			"extensions": [
				"dbaeumer.vscode-eslint",
				"mtxr.sqltools",
				"mtxr.sqltools-driver-pg",
				"wix.vscode-import-cost",
				"esbenp.prettier-vscode"
			]
		}
	},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// This can be used to network with other containers or with the host.
	// "forwardPorts": [3000, 5432],

	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "yarn install",

	// Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "node"
}
